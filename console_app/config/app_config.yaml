# Console Application Configuration
# Multi-Agent Loan Processing System

app:
  name: "Multi-Agent Loan Processing Console"
  version: "1.0.0"
  environment: "${APP_ENVIRONMENT:-development}"
  debug: "${DEBUG:-false}"

# Agent provider configuration
# Supports both OpenAI and Azure OpenAI
agent_provider:
  # Provider type: "openai" or "azure_openai"
  provider_type: "${AGENT_PROVIDER_TYPE:-openai}"
  
  # OpenAI Configuration
  api_key: "${OPENAI_API_KEY}"
  model_default: "${OPENAI_MODEL:-gpt-4}"
  
  # Azure OpenAI Configuration (when provider_type: "azure_openai")
  azure_api_key: "${AZURE_OPENAI_KEY}"
  azure_api_base: "${AZURE_OPENAI_ENDPOINT}"
  azure_api_version: "${AZURE_OPENAI_API_VERSION:-2024-02-01}"
  azure_deployment_name: "${AZURE_OPENAI_DEPLOYMENT_NAME:-gpt-4}"

# Orchestration patterns are discovered from the backend
# The console app should not define orchestration logic - that's backend business logic
orchestration:
  # How to discover available patterns from backend
  discovery_method: "backend_query"  # Future: "api_endpoint" when backend becomes service
  
  # UI preferences only (not business logic)
  default_selection: "sequential"  # Which pattern to pre-select in UI
  show_pattern_details: true       # Show workflow details in console
  enable_comparison: true          # Allow pattern comparison feature

# Backend connectivity (infrastructure managed by backend)
backend:
  # Connection mode: "direct" (current) or "api" (future) 
  mode: "direct"
  
  # Future API mode configuration
  # api_base_url: "${BACKEND_API_URL:-http://localhost:8000}"
  # api_timeout_seconds: 30

# Application behavior settings
ui:
  show_detailed_output: "${SHOW_DETAILED_OUTPUT:-true}"
  auto_save_results: "${AUTO_SAVE_RESULTS:-true}"
  results_directory: "${RESULTS_DIR:-results}"
  pattern_comparison_enabled: "${PATTERN_COMPARISON:-true}"

# Note: Model selection is handled through agent provider configuration:
# - OpenAI: Uses model_default (e.g., "gpt-4", "gpt-3.5-turbo")
# - Azure OpenAI: Uses azure_deployment_name (e.g., "gpt-4", "my-gpt-35-turbo")

# Feature flags
features:
  custom_applications: false  # Future feature
  batch_processing: false     # Future feature  
  api_mode: false            # Future feature when loan_processing becomes service
  
# Note: Orchestration patterns are controlled by backend business logic,
# not by this console application configuration.