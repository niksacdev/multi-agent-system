[project]
name = "loan-processing-demo"
version = "0.1.0"
description = "Framework-agnostic loan processing system demo with pluggable AI providers"
authors = [
    { name = "Microsoft Agent Framework Team", email = "agent-framework@microsoft.com" }
]
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

dependencies = [
    # Core dependencies - always required
    "python-dotenv>=1.0.0",
    "pydantic>=2.5.0",
    "httpx>=0.27.0",
    "rich>=13.0.0", # For better console output
    "openai-agents>=0.2.4",
    "mcp[cli]>=1.12.3",
    "uvicorn>=0.35.0",
    "requests>=2.32.4",
    "pytest-cov>=6.2.1",
]

[project.optional-dependencies]
openai = [
    "openai>=1.0.0",
]
all-providers = [
    "openai>=1.0.0",
]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-mock>=3.12.0",
    "black>=24.0.0",
    "ruff>=0.1.0",
    "mypy>=1.8.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-mock>=3.12.0",
    "black>=24.0.0",
    "ruff>=0.1.0",
    "mypy>=1.8.0",
]

[tool.ruff]
line-length = 120
target-version = "py310"
extend-select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.ruff.isort]
known-first-party = ["loan_processing"]
known-third-party = ["agents"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
line-length = 120
target-version = ['py310']

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]

[tool.hatch.build.targets.wheel]
packages = ["loan_processing"]

[tool.hatch.build.targets.sdist]
include = [
  "loan_processing",
  "README.md",
  "LICENSE",
  "agent-persona",
  "docs",
  "pyproject.toml",
]
