name: 🔒 Branch Protection

on:
  schedule:
    # Run daily at 2 AM UTC to catch any drift
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual triggers

jobs:
  validate-main-branch:
    name: Validate Main Branch Health
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout main
      uses: actions/checkout@v4
      with:
        ref: main
        
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        
    - name: 📦 Install UV
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        
    - name: 🔄 Install dependencies
      run: |
        uv sync
        
    - name: 🧪 Core functionality validation
      run: |
        echo "🧪 Running core agent registry tests on main branch..."
        uv run pytest tests/test_agent_registry.py -v
        
    - name: 🧪 Comprehensive validation
      run: |
        echo "🧪 Running validation script..."
        uv run python validate_tests.py
        
    - name: 📊 Verify core component coverage
      run: |
        echo "📊 Checking that main branch maintains ≥90% coverage on core components..."
        uv run python -c "
        import subprocess
        import re
        import sys
        
        result = subprocess.run([
            'uv', 'run', 'pytest', 
            'tests/test_agent_registry.py',
            '--cov=loan_processing.agents.providers.openai.agentregistry', 
            '--cov=loan_processing.agents.shared',
            '--cov-report=term-missing'
        ], capture_output=True, text=True)
        
        output = result.stdout
        coverage_match = re.search(r'TOTAL.*?(\d+)%', output)
        
        if coverage_match:
            coverage = int(coverage_match.group(1))
            if coverage < 90:
                print(f'🚨 ALERT: Main branch coverage dropped to {coverage}%')
                sys.exit(1)
            else:
                print(f'✅ Main branch coverage: {coverage}%')
        else:
            print('⚠️ Could not determine exact coverage, checking if tests passed...')
            if result.returncode == 0:
                print('✅ Tests passed on main branch')
            else:
                print('❌ Tests failed on main branch')
                sys.exit(1)
        "
        
    - name: 🏗️ Validate architecture integrity
      run: |
        echo "🏗️ Validating architectural boundaries on main..."
        
        # Check domain boundaries
        sdk_imports=$(grep -r "from openai\|import openai\|from anthropic\|import anthropic" loan_processing/agents/shared/ loan_processing/tools/services/ || true)
        
        if [ -n "$sdk_imports" ]; then
          echo "🚨 CRITICAL: SDK imports found in domain layers on main branch!"
          echo "$sdk_imports"
          exit 1
        else
          echo "✅ Domain boundaries clean on main branch"
        fi
        
    - name: 🚨 Alert on failure
      if: failure()
      run: |
        echo "🚨 CRITICAL: Main branch health check failed!"
        echo "This indicates that main branch may have been compromised."
        echo "Immediate investigation required."
        
        # In a real setup, you'd send alerts to Slack/Teams/Email here
        echo "Notification would be sent to dev team."